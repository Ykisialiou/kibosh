#!/usr/bin/env bash

set -e

export PATH=$PATH:/var/vcap/packages/cf-cli-6-linux/bin/

cf_service_broker_command() {
  broker_name=${1?"No service name provided, usage: cf_service_broker_command <service-name>"}

  if cf service-brokers | cut -f1 -d" " | grep -F -x ${broker_name} >/dev/null; then
    echo update-service-broker
  else
    echo create-service-broker
  fi
}

<%
def escape_shell(str)
  "'#{str.to_s.gsub(/'/, "'\\\\''")}'"
end
%>

export PATH=/var/vcap/packages/cf-cli/bin:$PATH
export CF_DIAL_TIMEOUT=60

cf api <%= p('disable_ssl_cert_verification') ? '--skip-ssl-validation' : '' %> <%= p('cf.api_url') %>
cf auth <%= escape_shell(p('cf.admin_username')) %> <%= escape_shell(p('cf.admin_password')) %>

broker_name=<%= p('broker_name') %>
broker_cmd=$(cf_service_broker_command "${broker_name}")

<% if_p('broker_uri') do |broker_uri| %>
broker_uri=<%= broker_uri %>
<% end %>

if [ -z "$broker_uri" ]; then
  # We assume that if no route is registered, there is only 1 broker instance
  broker_uri=http://<%= link('kibosh_broker').instances[0].address %>:<%= link('kibosh_broker').p('kibosh.port') %>
fi

cf $broker_cmd $broker_name \
    <%= escape_shell(link('kibosh_broker').p('kibosh.username')) %> <%= escape_shell(link('kibosh_broker').p('kibosh.password')) %> $broker_uri

<% if p('enable_service_access', true) %>
    python3 /var/vcap/jobs/register-broker/bin/enable.py
<% end %>
