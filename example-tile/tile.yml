---
name: kibosh-example
icon_file: resources/icon.jpg
label: Kibosh Example Tile
description: Kibosh Example Tile

properties:
- name: service_id
  type: string
  value: setTouniqueGuidPerTile
- name: service_name
  type: string
  value: spacebears
- name: kibosh_broker_creds
  type: simple_credentials
  label: Kibosh Broker Creds
  description: Username and Password for Kibosh Broker

forms:
- name: k8s_form
  label: Kubernetes Cluster
  description: Cluster where instances will be deployed
  properties:
  - name: k8s_cluster_ca_cert
    type: text
    label: Cluster CA Cert
  - name: k8s_cluster_server
    type: string
    label: Cluster URL
  - name: k8s_cluster_token
    type: text
    label: Cluster Token
- name: registry_form
  label: Registry
  description: Private Registry for helm images
  properties:
  - name: registry_server
    type: string
    label: Registry Server
  - name: registry_user
    type: string
    label: Registry User
  - name: registry_pass
    type: text
    label: Registry Password


packages:
- name: docker
  type: bosh-release
  path: resources/docker-31.0.1.tgz

- name: example-chart
  type: bosh-release
  path: resources/example-chart.tgz

- name: kibosh
  type: bosh-release
  path: resources/kibosh-release-0.0.26.tgz
  jobs:
  - name: kibosh
    templates:
    - name: kibosh
      release: kibosh
    - name: example-chart
      release: example-chart
    properties:
      kibosh:
        username: (( .properties.kibosh_broker_creds.identity ))
        password: (( .properties.kibosh_broker_creds.password ))
        service_id: (( .properties.service_id.value ))
        service_name: (( .properties.service_name.value ))
        helm_chart_dir: /var/vcap/packages/example-chart/example-chart
        ca_data: (( .properties.k8s_cluster_ca_cert.value ))
        server: (( .properties.k8s_cluster_server.value ))
        token: (( .properties.k8s_cluster_token.value ))
      registry:
        server: (( .properties.registry_server.value ))
        username: (( .properties.registry_user.value ))
        password: (( .properties.registry_pass.value ))

  - name: loader
    templates:
    - name: load-image
      release: kibosh
    - name: example-chart
      release: example-chart
    - name: docker
      release: docker
    properties:
      chart_path: /var/vcap/packages/example-chart/example-chart
      registry:
        server: (( .properties.registry_server.value ))
        username: (( .properties.registry_user.value ))
        password: (( .properties.registry_pass.value ))

  - name: register
    templates:
    - name: register-broker
      release: kibosh
    lifecycle: errand
    post_deploy: true
    properties:
      broker_name: (( .properties.service_name.value ))
      disable_ssl_cert_verification: (( ..cf.ha_proxy.skip_cert_verify.value ))
      cf:
        api_url: https://api.(( ..cf.cloud_controller.system_domain.value ))
        admin_username: (( ..cf.uaa.system_services_credentials.identity ))
        admin_password: (( ..cf.uaa.system_services_credentials.password ))

  - name: deregistrar
    templates:
    - name: delete-all-and-deregister
      release: kibosh
    lifecycle: errand
    pre_delete: true
    properties:
      broker_name: (( .properties.service_name.value ))
      disable_ssl_cert_verification: (( ..cf.ha_proxy.skip_cert_verify.value ))
      cf:
        api_url: https://api.(( ..cf.cloud_controller.system_domain.value ))
        uaa_url: https://uaa.(( ..cf.cloud_controller.system_domain.value ))
        admin_username: (( ..cf.uaa.system_services_credentials.identity ))
        admin_password: (( ..cf.uaa.system_services_credentials.password ))
